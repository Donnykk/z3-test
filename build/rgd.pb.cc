// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rgd.proto

#include "rgd.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_rgd_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JitRequest_rgd_2eproto;
namespace rgd {
class JitEmptyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JitEmpty> _instance;
} _JitEmpty_default_instance_;
class JitCmdv2DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JitCmdv2> _instance;
} _JitCmdv2_default_instance_;
class ResetCmdDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResetCmd> _instance;
} _ResetCmd_default_instance_;
class JitBranchContextDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JitBranchContext> _instance;
} _JitBranchContext_default_instance_;
class JitCmdDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JitCmd> _instance;
} _JitCmd_default_instance_;
class JitRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JitRequest> _instance;
} _JitRequest_default_instance_;
class JitReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JitReply> _instance;
} _JitReply_default_instance_;
class DupReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DupReply> _instance;
} _DupReply_default_instance_;
class BmReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BmReply> _instance;
} _BmReply_default_instance_;
}  // namespace rgd
static void InitDefaultsscc_info_BmReply_rgd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rgd::_BmReply_default_instance_;
    new (ptr) ::rgd::BmReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rgd::BmReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BmReply_rgd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BmReply_rgd_2eproto}, {}};

static void InitDefaultsscc_info_DupReply_rgd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rgd::_DupReply_default_instance_;
    new (ptr) ::rgd::DupReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rgd::DupReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DupReply_rgd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DupReply_rgd_2eproto}, {}};

static void InitDefaultsscc_info_JitBranchContext_rgd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rgd::_JitBranchContext_default_instance_;
    new (ptr) ::rgd::JitBranchContext();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rgd::JitBranchContext::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JitBranchContext_rgd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_JitBranchContext_rgd_2eproto}, {}};

static void InitDefaultsscc_info_JitCmd_rgd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rgd::_JitCmd_default_instance_;
    new (ptr) ::rgd::JitCmd();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rgd::JitCmd::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JitCmd_rgd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_JitCmd_rgd_2eproto}, {}};

static void InitDefaultsscc_info_JitCmdv2_rgd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rgd::_JitCmdv2_default_instance_;
    new (ptr) ::rgd::JitCmdv2();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rgd::JitCmdv2::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_JitCmdv2_rgd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_JitCmdv2_rgd_2eproto}, {
      &scc_info_JitRequest_rgd_2eproto.base,}};

static void InitDefaultsscc_info_JitEmpty_rgd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rgd::_JitEmpty_default_instance_;
    new (ptr) ::rgd::JitEmpty();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rgd::JitEmpty::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JitEmpty_rgd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_JitEmpty_rgd_2eproto}, {}};

static void InitDefaultsscc_info_JitReply_rgd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rgd::_JitReply_default_instance_;
    new (ptr) ::rgd::JitReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rgd::JitReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JitReply_rgd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_JitReply_rgd_2eproto}, {}};

static void InitDefaultsscc_info_JitRequest_rgd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rgd::_JitRequest_default_instance_;
    new (ptr) ::rgd::JitRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rgd::JitRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JitRequest_rgd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_JitRequest_rgd_2eproto}, {}};

static void InitDefaultsscc_info_ResetCmd_rgd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rgd::_ResetCmd_default_instance_;
    new (ptr) ::rgd::ResetCmd();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rgd::ResetCmd::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResetCmd_rgd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ResetCmd_rgd_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_rgd_2eproto[9];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_rgd_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_rgd_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_rgd_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rgd::JitEmpty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rgd::JitCmdv2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::rgd::JitCmdv2, cmd_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitCmdv2, test_value_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitCmdv2, expr_string_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitCmdv2, file_name_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitCmdv2, bhash_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitCmdv2, shash_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitCmdv2, direction_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitCmdv2, expr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rgd::ResetCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::rgd::ResetCmd, file_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rgd::JitBranchContext, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::rgd::JitBranchContext, bhash_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitBranchContext, shash_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitBranchContext, order_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitBranchContext, direction_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rgd::JitCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::rgd::JitCmd, cmd_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitCmd, test_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rgd::JitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::rgd::JitRequest, kind_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitRequest, boolvalue_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitRequest, bits_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitRequest, value_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitRequest, children_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitRequest, name_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitRequest, index_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitRequest, label_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitRequest, hash_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitRequest, direction_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitRequest, sessionid_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitRequest, full_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rgd::JitReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::rgd::JitReply, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rgd::DupReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::rgd::DupReply, dup_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rgd::BmReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::rgd::BmReply, bm_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::rgd::JitEmpty)},
  { 5, -1, sizeof(::rgd::JitCmdv2)},
  { 18, -1, sizeof(::rgd::ResetCmd)},
  { 24, -1, sizeof(::rgd::JitBranchContext)},
  { 33, -1, sizeof(::rgd::JitCmd)},
  { 40, -1, sizeof(::rgd::JitRequest)},
  { 57, -1, sizeof(::rgd::JitReply)},
  { 63, -1, sizeof(::rgd::DupReply)},
  { 69, -1, sizeof(::rgd::BmReply)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::rgd::_JitEmpty_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::rgd::_JitCmdv2_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::rgd::_ResetCmd_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::rgd::_JitBranchContext_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::rgd::_JitCmd_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::rgd::_JitRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::rgd::_JitReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::rgd::_DupReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::rgd::_BmReply_default_instance_),
};

const char descriptor_table_protodef_rgd_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\trgd.proto\022\003rgd\"\n\n\010JitEmpty\"\243\001\n\010JitCmdv"
  "2\022\013\n\003cmd\030\001 \001(\r\022\022\n\ntest_value\030\002 \001(\005\022\023\n\013ex"
  "pr_string\030\003 \003(\014\022\021\n\tfile_name\030\004 \001(\t\022\r\n\005bh"
  "ash\030\005 \001(\004\022\r\n\005shash\030\006 \001(\004\022\021\n\tdirection\030\007 "
  "\001(\010\022\035\n\004expr\030\010 \003(\0132\017.rgd.JitRequest\"\035\n\010Re"
  "setCmd\022\021\n\tfile_name\030\001 \001(\t\"R\n\020JitBranchCo"
  "ntext\022\r\n\005bhash\030\001 \001(\004\022\r\n\005shash\030\002 \001(\004\022\r\n\005o"
  "rder\030\003 \001(\r\022\021\n\tdirection\030\004 \001(\010\")\n\006JitCmd\022"
  "\013\n\003cmd\030\001 \001(\r\022\022\n\ntest_value\030\002 \001(\005\"\333\001\n\nJit"
  "Request\022\014\n\004kind\030\001 \001(\r\022\021\n\tboolvalue\030\002 \001(\r"
  "\022\014\n\004bits\030\003 \001(\r\022\r\n\005value\030\004 \001(\t\022!\n\010childre"
  "n\030\005 \003(\0132\017.rgd.JitRequest\022\014\n\004name\030\006 \001(\t\022\r"
  "\n\005index\030\007 \001(\r\022\r\n\005label\030\010 \001(\r\022\014\n\004hash\030\t \001"
  "(\r\022\021\n\tdirection\030\n \001(\r\022\021\n\tsessionid\030\013 \001(\r"
  "\022\014\n\004full\030\014 \001(\r\"\033\n\010JitReply\022\017\n\007message\030\001 "
  "\001(\t\"\027\n\010DupReply\022\013\n\003dup\030\001 \001(\010\"\025\n\007BmReply\022"
  "\n\n\002bm\030\001 \001(\0142\302\001\n\003RGD\0222\n\016sendExpression\022\017."
  "rgd.JitRequest\032\r.rgd.JitReply\"\000\022\'\n\007sendC"
  "md\022\013.rgd.JitCmd\032\r.rgd.JitReply\"\000\022+\n\tsend"
  "Cmdv2\022\r.rgd.JitCmdv2\032\r.rgd.JitReply\"\000\0221\n"
  "\017startNewSession\022\r.rgd.ResetCmd\032\r.rgd.Ji"
  "tReply\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_rgd_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_rgd_2eproto_sccs[9] = {
  &scc_info_BmReply_rgd_2eproto.base,
  &scc_info_DupReply_rgd_2eproto.base,
  &scc_info_JitBranchContext_rgd_2eproto.base,
  &scc_info_JitCmd_rgd_2eproto.base,
  &scc_info_JitCmdv2_rgd_2eproto.base,
  &scc_info_JitEmpty_rgd_2eproto.base,
  &scc_info_JitReply_rgd_2eproto.base,
  &scc_info_JitRequest_rgd_2eproto.base,
  &scc_info_ResetCmd_rgd_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_rgd_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_rgd_2eproto = {
  false, false, descriptor_table_protodef_rgd_2eproto, "rgd.proto", 856,
  &descriptor_table_rgd_2eproto_once, descriptor_table_rgd_2eproto_sccs, descriptor_table_rgd_2eproto_deps, 9, 0,
  schemas, file_default_instances, TableStruct_rgd_2eproto::offsets,
  file_level_metadata_rgd_2eproto, 9, file_level_enum_descriptors_rgd_2eproto, file_level_service_descriptors_rgd_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_rgd_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_rgd_2eproto)), true);
namespace rgd {

// ===================================================================

void JitEmpty::InitAsDefaultInstance() {
}
class JitEmpty::_Internal {
 public:
};

JitEmpty::JitEmpty(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:rgd.JitEmpty)
}
JitEmpty::JitEmpty(const JitEmpty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rgd.JitEmpty)
}

void JitEmpty::SharedCtor() {
}

JitEmpty::~JitEmpty() {
  // @@protoc_insertion_point(destructor:rgd.JitEmpty)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JitEmpty::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void JitEmpty::ArenaDtor(void* object) {
  JitEmpty* _this = reinterpret_cast< JitEmpty* >(object);
  (void)_this;
}
void JitEmpty::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JitEmpty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JitEmpty& JitEmpty::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JitEmpty_rgd_2eproto.base);
  return *internal_default_instance();
}


void JitEmpty::Clear() {
// @@protoc_insertion_point(message_clear_start:rgd.JitEmpty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JitEmpty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JitEmpty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rgd.JitEmpty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rgd.JitEmpty)
  return target;
}

size_t JitEmpty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rgd.JitEmpty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JitEmpty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rgd.JitEmpty)
  GOOGLE_DCHECK_NE(&from, this);
  const JitEmpty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JitEmpty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rgd.JitEmpty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rgd.JitEmpty)
    MergeFrom(*source);
  }
}

void JitEmpty::MergeFrom(const JitEmpty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rgd.JitEmpty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void JitEmpty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rgd.JitEmpty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JitEmpty::CopyFrom(const JitEmpty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rgd.JitEmpty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JitEmpty::IsInitialized() const {
  return true;
}

void JitEmpty::InternalSwap(JitEmpty* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JitEmpty::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void JitCmdv2::InitAsDefaultInstance() {
}
class JitCmdv2::_Internal {
 public:
};

JitCmdv2::JitCmdv2(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  expr_string_(arena),
  expr_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:rgd.JitCmdv2)
}
JitCmdv2::JitCmdv2(const JitCmdv2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      expr_string_(from.expr_string_),
      expr_(from.expr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_file_name().empty()) {
    file_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_file_name(),
      GetArena());
  }
  ::memcpy(&cmd_, &from.cmd_,
    static_cast<size_t>(reinterpret_cast<char*>(&direction_) -
    reinterpret_cast<char*>(&cmd_)) + sizeof(direction_));
  // @@protoc_insertion_point(copy_constructor:rgd.JitCmdv2)
}

void JitCmdv2::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_JitCmdv2_rgd_2eproto.base);
  file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&direction_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(direction_));
}

JitCmdv2::~JitCmdv2() {
  // @@protoc_insertion_point(destructor:rgd.JitCmdv2)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JitCmdv2::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  file_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void JitCmdv2::ArenaDtor(void* object) {
  JitCmdv2* _this = reinterpret_cast< JitCmdv2* >(object);
  (void)_this;
}
void JitCmdv2::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JitCmdv2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JitCmdv2& JitCmdv2::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JitCmdv2_rgd_2eproto.base);
  return *internal_default_instance();
}


void JitCmdv2::Clear() {
// @@protoc_insertion_point(message_clear_start:rgd.JitCmdv2)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  expr_string_.Clear();
  expr_.Clear();
  file_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&direction_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(direction_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JitCmdv2::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 cmd = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          cmd_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 test_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          test_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated bytes expr_string = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_expr_string();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // string file_name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_file_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "rgd.JitCmdv2.file_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 bhash = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          bhash_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 shash = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          shash_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool direction = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          direction_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .rgd.JitRequest expr = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_expr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JitCmdv2::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rgd.JitCmdv2)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmd = 1;
  if (this->cmd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_cmd(), target);
  }

  // int32 test_value = 2;
  if (this->test_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_test_value(), target);
  }

  // repeated bytes expr_string = 3;
  for (int i = 0, n = this->_internal_expr_string_size(); i < n; i++) {
    const auto& s = this->_internal_expr_string(i);
    target = stream->WriteBytes(3, s, target);
  }

  // string file_name = 4;
  if (this->file_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_name().data(), static_cast<int>(this->_internal_file_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rgd.JitCmdv2.file_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_file_name(), target);
  }

  // uint64 bhash = 5;
  if (this->bhash() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_bhash(), target);
  }

  // uint64 shash = 6;
  if (this->shash() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_shash(), target);
  }

  // bool direction = 7;
  if (this->direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_direction(), target);
  }

  // repeated .rgd.JitRequest expr = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_expr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, this->_internal_expr(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rgd.JitCmdv2)
  return target;
}

size_t JitCmdv2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rgd.JitCmdv2)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes expr_string = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(expr_string_.size());
  for (int i = 0, n = expr_string_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      expr_string_.Get(i));
  }

  // repeated .rgd.JitRequest expr = 8;
  total_size += 1UL * this->_internal_expr_size();
  for (const auto& msg : this->expr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string file_name = 4;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_name());
  }

  // uint32 cmd = 1;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_cmd());
  }

  // int32 test_value = 2;
  if (this->test_value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_test_value());
  }

  // uint64 bhash = 5;
  if (this->bhash() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_bhash());
  }

  // uint64 shash = 6;
  if (this->shash() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_shash());
  }

  // bool direction = 7;
  if (this->direction() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JitCmdv2::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rgd.JitCmdv2)
  GOOGLE_DCHECK_NE(&from, this);
  const JitCmdv2* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JitCmdv2>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rgd.JitCmdv2)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rgd.JitCmdv2)
    MergeFrom(*source);
  }
}

void JitCmdv2::MergeFrom(const JitCmdv2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rgd.JitCmdv2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  expr_string_.MergeFrom(from.expr_string_);
  expr_.MergeFrom(from.expr_);
  if (from.file_name().size() > 0) {
    _internal_set_file_name(from._internal_file_name());
  }
  if (from.cmd() != 0) {
    _internal_set_cmd(from._internal_cmd());
  }
  if (from.test_value() != 0) {
    _internal_set_test_value(from._internal_test_value());
  }
  if (from.bhash() != 0) {
    _internal_set_bhash(from._internal_bhash());
  }
  if (from.shash() != 0) {
    _internal_set_shash(from._internal_shash());
  }
  if (from.direction() != 0) {
    _internal_set_direction(from._internal_direction());
  }
}

void JitCmdv2::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rgd.JitCmdv2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JitCmdv2::CopyFrom(const JitCmdv2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rgd.JitCmdv2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JitCmdv2::IsInitialized() const {
  return true;
}

void JitCmdv2::InternalSwap(JitCmdv2* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  expr_string_.InternalSwap(&other->expr_string_);
  expr_.InternalSwap(&other->expr_);
  file_name_.Swap(&other->file_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JitCmdv2, direction_)
      + sizeof(JitCmdv2::direction_)
      - PROTOBUF_FIELD_OFFSET(JitCmdv2, cmd_)>(
          reinterpret_cast<char*>(&cmd_),
          reinterpret_cast<char*>(&other->cmd_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JitCmdv2::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResetCmd::InitAsDefaultInstance() {
}
class ResetCmd::_Internal {
 public:
};

ResetCmd::ResetCmd(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:rgd.ResetCmd)
}
ResetCmd::ResetCmd(const ResetCmd& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_file_name().empty()) {
    file_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_file_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:rgd.ResetCmd)
}

void ResetCmd::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResetCmd_rgd_2eproto.base);
  file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ResetCmd::~ResetCmd() {
  // @@protoc_insertion_point(destructor:rgd.ResetCmd)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResetCmd::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  file_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResetCmd::ArenaDtor(void* object) {
  ResetCmd* _this = reinterpret_cast< ResetCmd* >(object);
  (void)_this;
}
void ResetCmd::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResetCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResetCmd& ResetCmd::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResetCmd_rgd_2eproto.base);
  return *internal_default_instance();
}


void ResetCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:rgd.ResetCmd)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetCmd::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string file_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_file_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "rgd.ResetCmd.file_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetCmd::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rgd.ResetCmd)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_name().data(), static_cast<int>(this->_internal_file_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rgd.ResetCmd.file_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rgd.ResetCmd)
  return target;
}

size_t ResetCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rgd.ResetCmd)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetCmd::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rgd.ResetCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetCmd* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetCmd>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rgd.ResetCmd)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rgd.ResetCmd)
    MergeFrom(*source);
  }
}

void ResetCmd::MergeFrom(const ResetCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rgd.ResetCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file_name().size() > 0) {
    _internal_set_file_name(from._internal_file_name());
  }
}

void ResetCmd::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rgd.ResetCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetCmd::CopyFrom(const ResetCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rgd.ResetCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetCmd::IsInitialized() const {
  return true;
}

void ResetCmd::InternalSwap(ResetCmd* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  file_name_.Swap(&other->file_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetCmd::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void JitBranchContext::InitAsDefaultInstance() {
}
class JitBranchContext::_Internal {
 public:
};

JitBranchContext::JitBranchContext(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:rgd.JitBranchContext)
}
JitBranchContext::JitBranchContext(const JitBranchContext& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&bhash_, &from.bhash_,
    static_cast<size_t>(reinterpret_cast<char*>(&direction_) -
    reinterpret_cast<char*>(&bhash_)) + sizeof(direction_));
  // @@protoc_insertion_point(copy_constructor:rgd.JitBranchContext)
}

void JitBranchContext::SharedCtor() {
  ::memset(&bhash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&direction_) -
      reinterpret_cast<char*>(&bhash_)) + sizeof(direction_));
}

JitBranchContext::~JitBranchContext() {
  // @@protoc_insertion_point(destructor:rgd.JitBranchContext)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JitBranchContext::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void JitBranchContext::ArenaDtor(void* object) {
  JitBranchContext* _this = reinterpret_cast< JitBranchContext* >(object);
  (void)_this;
}
void JitBranchContext::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JitBranchContext::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JitBranchContext& JitBranchContext::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JitBranchContext_rgd_2eproto.base);
  return *internal_default_instance();
}


void JitBranchContext::Clear() {
// @@protoc_insertion_point(message_clear_start:rgd.JitBranchContext)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bhash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&direction_) -
      reinterpret_cast<char*>(&bhash_)) + sizeof(direction_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JitBranchContext::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 bhash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          bhash_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 shash = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          shash_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 order = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          order_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool direction = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          direction_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JitBranchContext::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rgd.JitBranchContext)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 bhash = 1;
  if (this->bhash() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_bhash(), target);
  }

  // uint64 shash = 2;
  if (this->shash() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_shash(), target);
  }

  // uint32 order = 3;
  if (this->order() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_order(), target);
  }

  // bool direction = 4;
  if (this->direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_direction(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rgd.JitBranchContext)
  return target;
}

size_t JitBranchContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rgd.JitBranchContext)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 bhash = 1;
  if (this->bhash() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_bhash());
  }

  // uint64 shash = 2;
  if (this->shash() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_shash());
  }

  // uint32 order = 3;
  if (this->order() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_order());
  }

  // bool direction = 4;
  if (this->direction() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JitBranchContext::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rgd.JitBranchContext)
  GOOGLE_DCHECK_NE(&from, this);
  const JitBranchContext* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JitBranchContext>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rgd.JitBranchContext)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rgd.JitBranchContext)
    MergeFrom(*source);
  }
}

void JitBranchContext::MergeFrom(const JitBranchContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rgd.JitBranchContext)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bhash() != 0) {
    _internal_set_bhash(from._internal_bhash());
  }
  if (from.shash() != 0) {
    _internal_set_shash(from._internal_shash());
  }
  if (from.order() != 0) {
    _internal_set_order(from._internal_order());
  }
  if (from.direction() != 0) {
    _internal_set_direction(from._internal_direction());
  }
}

void JitBranchContext::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rgd.JitBranchContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JitBranchContext::CopyFrom(const JitBranchContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rgd.JitBranchContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JitBranchContext::IsInitialized() const {
  return true;
}

void JitBranchContext::InternalSwap(JitBranchContext* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JitBranchContext, direction_)
      + sizeof(JitBranchContext::direction_)
      - PROTOBUF_FIELD_OFFSET(JitBranchContext, bhash_)>(
          reinterpret_cast<char*>(&bhash_),
          reinterpret_cast<char*>(&other->bhash_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JitBranchContext::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void JitCmd::InitAsDefaultInstance() {
}
class JitCmd::_Internal {
 public:
};

JitCmd::JitCmd(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:rgd.JitCmd)
}
JitCmd::JitCmd(const JitCmd& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&cmd_, &from.cmd_,
    static_cast<size_t>(reinterpret_cast<char*>(&test_value_) -
    reinterpret_cast<char*>(&cmd_)) + sizeof(test_value_));
  // @@protoc_insertion_point(copy_constructor:rgd.JitCmd)
}

void JitCmd::SharedCtor() {
  ::memset(&cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&test_value_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(test_value_));
}

JitCmd::~JitCmd() {
  // @@protoc_insertion_point(destructor:rgd.JitCmd)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JitCmd::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void JitCmd::ArenaDtor(void* object) {
  JitCmd* _this = reinterpret_cast< JitCmd* >(object);
  (void)_this;
}
void JitCmd::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JitCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JitCmd& JitCmd::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JitCmd_rgd_2eproto.base);
  return *internal_default_instance();
}


void JitCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:rgd.JitCmd)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&test_value_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(test_value_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JitCmd::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 cmd = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          cmd_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 test_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          test_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JitCmd::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rgd.JitCmd)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmd = 1;
  if (this->cmd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_cmd(), target);
  }

  // int32 test_value = 2;
  if (this->test_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_test_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rgd.JitCmd)
  return target;
}

size_t JitCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rgd.JitCmd)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 cmd = 1;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_cmd());
  }

  // int32 test_value = 2;
  if (this->test_value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_test_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JitCmd::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rgd.JitCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const JitCmd* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JitCmd>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rgd.JitCmd)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rgd.JitCmd)
    MergeFrom(*source);
  }
}

void JitCmd::MergeFrom(const JitCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rgd.JitCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cmd() != 0) {
    _internal_set_cmd(from._internal_cmd());
  }
  if (from.test_value() != 0) {
    _internal_set_test_value(from._internal_test_value());
  }
}

void JitCmd::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rgd.JitCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JitCmd::CopyFrom(const JitCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rgd.JitCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JitCmd::IsInitialized() const {
  return true;
}

void JitCmd::InternalSwap(JitCmd* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JitCmd, test_value_)
      + sizeof(JitCmd::test_value_)
      - PROTOBUF_FIELD_OFFSET(JitCmd, cmd_)>(
          reinterpret_cast<char*>(&cmd_),
          reinterpret_cast<char*>(&other->cmd_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JitCmd::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void JitRequest::InitAsDefaultInstance() {
}
class JitRequest::_Internal {
 public:
};

JitRequest::JitRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  children_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:rgd.JitRequest)
}
JitRequest::JitRequest(const JitRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      children_(from.children_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  ::memcpy(&kind_, &from.kind_,
    static_cast<size_t>(reinterpret_cast<char*>(&full_) -
    reinterpret_cast<char*>(&kind_)) + sizeof(full_));
  // @@protoc_insertion_point(copy_constructor:rgd.JitRequest)
}

void JitRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_JitRequest_rgd_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&kind_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&full_) -
      reinterpret_cast<char*>(&kind_)) + sizeof(full_));
}

JitRequest::~JitRequest() {
  // @@protoc_insertion_point(destructor:rgd.JitRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JitRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void JitRequest::ArenaDtor(void* object) {
  JitRequest* _this = reinterpret_cast< JitRequest* >(object);
  (void)_this;
}
void JitRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JitRequest& JitRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JitRequest_rgd_2eproto.base);
  return *internal_default_instance();
}


void JitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rgd.JitRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  children_.Clear();
  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&kind_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&full_) -
      reinterpret_cast<char*>(&kind_)) + sizeof(full_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JitRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 kind = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          kind_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 boolvalue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          boolvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 bits = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          bits_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "rgd.JitRequest.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .rgd.JitRequest children = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_children(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // string name = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "rgd.JitRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 index = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 label = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          label_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 hash = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          hash_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 direction = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          direction_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 sessionid = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          sessionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 full = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          full_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JitRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rgd.JitRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 kind = 1;
  if (this->kind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_kind(), target);
  }

  // uint32 boolvalue = 2;
  if (this->boolvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_boolvalue(), target);
  }

  // uint32 bits = 3;
  if (this->bits() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_bits(), target);
  }

  // string value = 4;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rgd.JitRequest.value");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_value(), target);
  }

  // repeated .rgd.JitRequest children = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_children_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_children(i), target, stream);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rgd.JitRequest.name");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_name(), target);
  }

  // uint32 index = 7;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_index(), target);
  }

  // uint32 label = 8;
  if (this->label() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_label(), target);
  }

  // uint32 hash = 9;
  if (this->hash() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_hash(), target);
  }

  // uint32 direction = 10;
  if (this->direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_direction(), target);
  }

  // uint32 sessionid = 11;
  if (this->sessionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_sessionid(), target);
  }

  // uint32 full = 12;
  if (this->full() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_full(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rgd.JitRequest)
  return target;
}

size_t JitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rgd.JitRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .rgd.JitRequest children = 5;
  total_size += 1UL * this->_internal_children_size();
  for (const auto& msg : this->children_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string value = 4;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint32 kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_kind());
  }

  // uint32 boolvalue = 2;
  if (this->boolvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_boolvalue());
  }

  // uint32 bits = 3;
  if (this->bits() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_bits());
  }

  // uint32 index = 7;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_index());
  }

  // uint32 label = 8;
  if (this->label() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_label());
  }

  // uint32 hash = 9;
  if (this->hash() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_hash());
  }

  // uint32 direction = 10;
  if (this->direction() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_direction());
  }

  // uint32 sessionid = 11;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_sessionid());
  }

  // uint32 full = 12;
  if (this->full() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_full());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JitRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rgd.JitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const JitRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JitRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rgd.JitRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rgd.JitRequest)
    MergeFrom(*source);
  }
}

void JitRequest::MergeFrom(const JitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rgd.JitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  children_.MergeFrom(from.children_);
  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.kind() != 0) {
    _internal_set_kind(from._internal_kind());
  }
  if (from.boolvalue() != 0) {
    _internal_set_boolvalue(from._internal_boolvalue());
  }
  if (from.bits() != 0) {
    _internal_set_bits(from._internal_bits());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
  if (from.label() != 0) {
    _internal_set_label(from._internal_label());
  }
  if (from.hash() != 0) {
    _internal_set_hash(from._internal_hash());
  }
  if (from.direction() != 0) {
    _internal_set_direction(from._internal_direction());
  }
  if (from.sessionid() != 0) {
    _internal_set_sessionid(from._internal_sessionid());
  }
  if (from.full() != 0) {
    _internal_set_full(from._internal_full());
  }
}

void JitRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rgd.JitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JitRequest::CopyFrom(const JitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rgd.JitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JitRequest::IsInitialized() const {
  return true;
}

void JitRequest::InternalSwap(JitRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  children_.InternalSwap(&other->children_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JitRequest, full_)
      + sizeof(JitRequest::full_)
      - PROTOBUF_FIELD_OFFSET(JitRequest, kind_)>(
          reinterpret_cast<char*>(&kind_),
          reinterpret_cast<char*>(&other->kind_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JitRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void JitReply::InitAsDefaultInstance() {
}
class JitReply::_Internal {
 public:
};

JitReply::JitReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:rgd.JitReply)
}
JitReply::JitReply(const JitReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_message(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:rgd.JitReply)
}

void JitReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_JitReply_rgd_2eproto.base);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

JitReply::~JitReply() {
  // @@protoc_insertion_point(destructor:rgd.JitReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JitReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void JitReply::ArenaDtor(void* object) {
  JitReply* _this = reinterpret_cast< JitReply* >(object);
  (void)_this;
}
void JitReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JitReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JitReply& JitReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JitReply_rgd_2eproto.base);
  return *internal_default_instance();
}


void JitReply::Clear() {
// @@protoc_insertion_point(message_clear_start:rgd.JitReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JitReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "rgd.JitReply.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JitReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rgd.JitReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rgd.JitReply.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rgd.JitReply)
  return target;
}

size_t JitReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rgd.JitReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JitReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rgd.JitReply)
  GOOGLE_DCHECK_NE(&from, this);
  const JitReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JitReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rgd.JitReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rgd.JitReply)
    MergeFrom(*source);
  }
}

void JitReply::MergeFrom(const JitReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rgd.JitReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
}

void JitReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rgd.JitReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JitReply::CopyFrom(const JitReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rgd.JitReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JitReply::IsInitialized() const {
  return true;
}

void JitReply::InternalSwap(JitReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata JitReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DupReply::InitAsDefaultInstance() {
}
class DupReply::_Internal {
 public:
};

DupReply::DupReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:rgd.DupReply)
}
DupReply::DupReply(const DupReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  dup_ = from.dup_;
  // @@protoc_insertion_point(copy_constructor:rgd.DupReply)
}

void DupReply::SharedCtor() {
  dup_ = false;
}

DupReply::~DupReply() {
  // @@protoc_insertion_point(destructor:rgd.DupReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DupReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DupReply::ArenaDtor(void* object) {
  DupReply* _this = reinterpret_cast< DupReply* >(object);
  (void)_this;
}
void DupReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DupReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DupReply& DupReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DupReply_rgd_2eproto.base);
  return *internal_default_instance();
}


void DupReply::Clear() {
// @@protoc_insertion_point(message_clear_start:rgd.DupReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dup_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DupReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool dup = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          dup_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DupReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rgd.DupReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool dup = 1;
  if (this->dup() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_dup(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rgd.DupReply)
  return target;
}

size_t DupReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rgd.DupReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool dup = 1;
  if (this->dup() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DupReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rgd.DupReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DupReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DupReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rgd.DupReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rgd.DupReply)
    MergeFrom(*source);
  }
}

void DupReply::MergeFrom(const DupReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rgd.DupReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dup() != 0) {
    _internal_set_dup(from._internal_dup());
  }
}

void DupReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rgd.DupReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DupReply::CopyFrom(const DupReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rgd.DupReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DupReply::IsInitialized() const {
  return true;
}

void DupReply::InternalSwap(DupReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(dup_, other->dup_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DupReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BmReply::InitAsDefaultInstance() {
}
class BmReply::_Internal {
 public:
};

BmReply::BmReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:rgd.BmReply)
}
BmReply::BmReply(const BmReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  bm_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bm().empty()) {
    bm_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_bm(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:rgd.BmReply)
}

void BmReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BmReply_rgd_2eproto.base);
  bm_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

BmReply::~BmReply() {
  // @@protoc_insertion_point(destructor:rgd.BmReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BmReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  bm_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BmReply::ArenaDtor(void* object) {
  BmReply* _this = reinterpret_cast< BmReply* >(object);
  (void)_this;
}
void BmReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BmReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BmReply& BmReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BmReply_rgd_2eproto.base);
  return *internal_default_instance();
}


void BmReply::Clear() {
// @@protoc_insertion_point(message_clear_start:rgd.BmReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bm_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BmReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes bm = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_bm();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BmReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rgd.BmReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes bm = 1;
  if (this->bm().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_bm(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rgd.BmReply)
  return target;
}

size_t BmReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rgd.BmReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes bm = 1;
  if (this->bm().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_bm());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BmReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rgd.BmReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BmReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BmReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rgd.BmReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rgd.BmReply)
    MergeFrom(*source);
  }
}

void BmReply::MergeFrom(const BmReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rgd.BmReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bm().size() > 0) {
    _internal_set_bm(from._internal_bm());
  }
}

void BmReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rgd.BmReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BmReply::CopyFrom(const BmReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rgd.BmReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BmReply::IsInitialized() const {
  return true;
}

void BmReply::InternalSwap(BmReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  bm_.Swap(&other->bm_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata BmReply::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace rgd
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::rgd::JitEmpty* Arena::CreateMaybeMessage< ::rgd::JitEmpty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rgd::JitEmpty >(arena);
}
template<> PROTOBUF_NOINLINE ::rgd::JitCmdv2* Arena::CreateMaybeMessage< ::rgd::JitCmdv2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rgd::JitCmdv2 >(arena);
}
template<> PROTOBUF_NOINLINE ::rgd::ResetCmd* Arena::CreateMaybeMessage< ::rgd::ResetCmd >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rgd::ResetCmd >(arena);
}
template<> PROTOBUF_NOINLINE ::rgd::JitBranchContext* Arena::CreateMaybeMessage< ::rgd::JitBranchContext >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rgd::JitBranchContext >(arena);
}
template<> PROTOBUF_NOINLINE ::rgd::JitCmd* Arena::CreateMaybeMessage< ::rgd::JitCmd >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rgd::JitCmd >(arena);
}
template<> PROTOBUF_NOINLINE ::rgd::JitRequest* Arena::CreateMaybeMessage< ::rgd::JitRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rgd::JitRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::rgd::JitReply* Arena::CreateMaybeMessage< ::rgd::JitReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rgd::JitReply >(arena);
}
template<> PROTOBUF_NOINLINE ::rgd::DupReply* Arena::CreateMaybeMessage< ::rgd::DupReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rgd::DupReply >(arena);
}
template<> PROTOBUF_NOINLINE ::rgd::BmReply* Arena::CreateMaybeMessage< ::rgd::BmReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rgd::BmReply >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
